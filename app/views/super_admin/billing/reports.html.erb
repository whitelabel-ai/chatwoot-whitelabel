<% content_for :page_title do %>
  Billing Reports
<% end %>

<div class="row">
  <div class="medium-12 columns">
    <div class="page-top-bar">
      <h2 class="page-title">Billing Reports</h2>
      <div class="page-top-bar__actions">
        <%= link_to "Back to Billing", super_admin_billing_index_path, class: "button secondary" %>
        <%= link_to "Export All Data", super_admin_billing_reports_path(format: :csv), class: "button primary" %>
      </div>
    </div>
  </div>
</div>

<!-- Report Filters -->
<div class="row">
  <div class="medium-12 columns">
    <div class="card">
      <div class="card-header">
        <h3>Report Filters</h3>
      </div>
      <div class="card-body">
        <%= form_with url: super_admin_billing_reports_path, method: :get, local: true, class: "report-filters-form" do |form| %>
          <div class="filter-row">
            <div class="filter-group">
              <%= form.label :date_range, "Date Range", class: "filter-label" %>
              <%= form.select :date_range, 
                              options_for_select([
                                ['Last 7 days', '7_days'],
                                ['Last 30 days', '30_days'],
                                ['Last 3 months', '3_months'],
                                ['Last 6 months', '6_months'],
                                ['Last year', '1_year'],
                                ['Custom', 'custom']
                              ], params[:date_range]), 
                              { prompt: 'Select date range' }, 
                              { class: "filter-select", id: "date_range_select" } %>
            </div>
            
            <div class="filter-group custom-date-inputs" style="display: none;">
              <%= form.label :start_date, "Start Date", class: "filter-label" %>
              <%= form.date_field :start_date, value: params[:start_date], class: "filter-input" %>
            </div>
            
            <div class="filter-group custom-date-inputs" style="display: none;">
              <%= form.label :end_date, "End Date", class: "filter-label" %>
              <%= form.date_field :end_date, value: params[:end_date], class: "filter-input" %>
            </div>
            
            <div class="filter-group">
              <%= form.label :plan_id, "Billing Plan", class: "filter-label" %>
              <%= form.select :plan_id, 
                              options_from_collection_for_select(BillingPlan.active, :id, :name, params[:plan_id]), 
                              { prompt: 'All plans' }, 
                              { class: "filter-select" } %>
            </div>
            
            <div class="filter-group">
              <%= form.label :report_type, "Report Type", class: "filter-label" %>
              <%= form.select :report_type, 
                              options_for_select([
                                ['Revenue Summary', 'revenue'],
                                ['Usage Analysis', 'usage'],
                                ['Account Performance', 'accounts'],
                                ['Transaction Details', 'transactions'],
                                ['Plan Comparison', 'plans']
                              ], params[:report_type] || 'revenue'), 
                              {}, 
                              { class: "filter-select" } %>
            </div>
            
            <div class="filter-actions">
              <%= form.submit "Generate Report", class: "button primary" %>
              <%= link_to "Reset Filters", super_admin_billing_reports_path, class: "button secondary" %>
            </div>
          </div>
        <% end %>
      </div>
    </div>
  </div>
</div>

<!-- Report Summary Cards -->
<div class="row">
  <div class="medium-3 columns">
    <div class="summary-card revenue">
      <div class="summary-icon">ðŸ’°</div>
      <div class="summary-value">$<%= number_with_delimiter(@report_data[:total_revenue] || 0) %></div>
      <div class="summary-label">Total Revenue</div>
      <div class="summary-change <%= @report_data[:revenue_change] && @report_data[:revenue_change] > 0 ? 'positive' : 'negative' %>">
        <% if @report_data[:revenue_change] %>
          <%= @report_data[:revenue_change] > 0 ? 'â†—' : 'â†˜' %> <%= @report_data[:revenue_change].abs.round(1) %>%
        <% else %>
          --
        <% end %>
      </div>
    </div>
  </div>
  
  <div class="medium-3 columns">
    <div class="summary-card transactions">
      <div class="summary-icon">ðŸ’³</div>
      <div class="summary-value"><%= number_with_delimiter(@report_data[:total_transactions] || 0) %></div>
      <div class="summary-label">Total Transactions</div>
      <div class="summary-change <%= @report_data[:transactions_change] && @report_data[:transactions_change] > 0 ? 'positive' : 'negative' %>">
        <% if @report_data[:transactions_change] %>
          <%= @report_data[:transactions_change] > 0 ? 'â†—' : 'â†˜' %> <%= @report_data[:transactions_change].abs.round(1) %>%
        <% else %>
          --
        <% end %>
      </div>
    </div>
  </div>
  
  <div class="medium-3 columns">
    <div class="summary-card messages">
      <div class="summary-icon">ðŸ’¬</div>
      <div class="summary-value"><%= number_with_delimiter(@report_data[:total_messages] || 0) %></div>
      <div class="summary-label">Messages Processed</div>
      <div class="summary-change <%= @report_data[:messages_change] && @report_data[:messages_change] > 0 ? 'positive' : 'negative' %>">
        <% if @report_data[:messages_change] %>
          <%= @report_data[:messages_change] > 0 ? 'â†—' : 'â†˜' %> <%= @report_data[:messages_change].abs.round(1) %>%
        <% else %>
          --
        <% end %>
      </div>
    </div>
  </div>
  
  <div class="medium-3 columns">
    <div class="summary-card accounts">
      <div class="summary-icon">ðŸ‘¥</div>
      <div class="summary-value"><%= number_with_delimiter(@report_data[:active_accounts] || 0) %></div>
      <div class="summary-label">Active Accounts</div>
      <div class="summary-change <%= @report_data[:accounts_change] && @report_data[:accounts_change] > 0 ? 'positive' : 'negative' %>">
        <% if @report_data[:accounts_change] %>
          <%= @report_data[:accounts_change] > 0 ? 'â†—' : 'â†˜' %> <%= @report_data[:accounts_change].abs.round(1) %>%
        <% else %>
          --
        <% end %>
      </div>
    </div>
  </div>
</div>

<!-- Revenue Report -->
<% if params[:report_type].blank? || params[:report_type] == 'revenue' %>
  <div class="row">
    <div class="medium-8 columns">
      <div class="card">
        <div class="card-header">
          <h3>Revenue Trend</h3>
          <div class="chart-controls">
            <button class="chart-toggle active" data-chart="daily">Daily</button>
            <button class="chart-toggle" data-chart="weekly">Weekly</button>
            <button class="chart-toggle" data-chart="monthly">Monthly</button>
          </div>
        </div>
        <div class="card-body">
          <canvas id="revenueChart" width="400" height="200"></canvas>
        </div>
      </div>
    </div>
    
    <div class="medium-4 columns">
      <div class="card">
        <div class="card-header">
          <h3>Revenue by Plan</h3>
        </div>
        <div class="card-body">
          <% if @report_data[:revenue_by_plan]&.any? %>
            <div class="plan-revenue-list">
              <% @report_data[:revenue_by_plan].each do |plan_data| %>
                <div class="plan-revenue-item">
                  <div class="plan-info">
                    <strong><%= plan_data[:name] %></strong>
                    <span class="plan-accounts"><%= plan_data[:accounts] %> accounts</span>
                  </div>
                  <div class="plan-revenue">
                    <strong>$<%= number_with_delimiter(plan_data[:revenue]) %></strong>
                    <div class="revenue-bar">
                      <div class="revenue-fill" style="width: <%= (plan_data[:revenue].to_f / @report_data[:revenue_by_plan].map { |p| p[:revenue] }.max * 100).round(1) %>%"></div>
                    </div>
                  </div>
                </div>
              <% end %>
            </div>
          <% else %>
            <p class="no-data">No revenue data available for the selected period.</p>
          <% end %>
        </div>
      </div>
    </div>
  </div>
<% end %>

<!-- Usage Report -->
<% if params[:report_type] == 'usage' %>
  <div class="row">
    <div class="medium-12 columns">
      <div class="card">
        <div class="card-header">
          <h3>Message Usage Analysis</h3>
        </div>
        <div class="card-body">
          <div class="usage-metrics-grid">
            <div class="usage-metric">
              <h4>Average Daily Usage</h4>
              <div class="metric-value"><%= number_with_delimiter(@report_data[:avg_daily_usage] || 0) %></div>
              <div class="metric-unit">messages/day</div>
            </div>
            
            <div class="usage-metric">
              <h4>Peak Usage Day</h4>
              <div class="metric-value"><%= number_with_delimiter(@report_data[:peak_usage] || 0) %></div>
              <div class="metric-unit">messages</div>
            </div>
            
            <div class="usage-metric">
              <h4>Usage Efficiency</h4>
              <div class="metric-value"><%= (@report_data[:usage_efficiency] || 0).round(1) %>%</div>
              <div class="metric-unit">of limits used</div>
            </div>
            
            <div class="usage-metric">
              <h4>Over-Limit Accounts</h4>
              <div class="metric-value"><%= @report_data[:over_limit_accounts] || 0 %></div>
              <div class="metric-unit">accounts</div>
            </div>
          </div>
          
          <div class="usage-chart-container">
            <canvas id="usageChart" width="400" height="200"></canvas>
          </div>
        </div>
      </div>
    </div>
  </div>
<% end %>

<!-- Account Performance Report -->
<% if params[:report_type] == 'accounts' %>
  <div class="row">
    <div class="medium-12 columns">
      <div class="card">
        <div class="card-header">
          <h3>Top Performing Accounts</h3>
          <div class="export-actions">
            <%= link_to "Export CSV", super_admin_billing_reports_path(format: :csv, report_type: 'accounts'), class: "button tiny primary" %>
          </div>
        </div>
        <div class="card-body">
          <% if @report_data[:top_accounts]&.any? %>
            <div class="accounts-table-container">
              <table class="accounts-performance-table">
                <thead>
                  <tr>
                    <th>Account</th>
                    <th>Plan</th>
                    <th>Messages Used</th>
                    <th>Usage %</th>
                    <th>Revenue</th>
                    <th>Transactions</th>
                    <th>Status</th>
                    <th>Performance</th>
                  </tr>
                </thead>
                <tbody>
                  <% @report_data[:top_accounts].each_with_index do |account, index| %>
                    <tr>
                      <td>
                        <div class="account-info">
                          <strong><%= account[:name] %></strong>
                          <small>#<%= account[:id] %></small>
                        </div>
                      </td>
                      <td><%= account[:plan_name] %></td>
                      <td><%= number_with_delimiter(account[:messages_used]) %></td>
                      <td>
                        <div class="usage-progress">
                          <div class="usage-bar">
                            <div class="usage-fill <%= account[:usage_percentage] > 100 ? 'over-limit' : account[:usage_percentage] > 80 ? 'near-limit' : 'normal' %>" 
                                 style="width: <%= [account[:usage_percentage], 100].min %>%"></div>
                          </div>
                          <span class="usage-text"><%= account[:usage_percentage].round(1) %>%</span>
                        </div>
                      </td>
                      <td>$<%= number_with_delimiter(account[:revenue]) %></td>
                      <td><%= account[:transactions] %></td>
                      <td>
                        <span class="status-badge <%= account[:status] %>">
                          <%= account[:status].humanize %>
                        </span>
                      </td>
                      <td>
                        <div class="performance-score <%= account[:performance_class] %>">
                          <%= account[:performance_score] %>
                        </div>
                      </td>
                    </tr>
                  <% end %>
                </tbody>
              </table>
            </div>
          <% else %>
            <p class="no-data">No account performance data available for the selected period.</p>
          <% end %>
        </div>
      </div>
    </div>
  </div>
<% end %>

<!-- Transaction Details Report -->
<% if params[:report_type] == 'transactions' %>
  <div class="row">
    <div class="medium-6 columns">
      <div class="card">
        <div class="card-header">
          <h3>Transaction Status Distribution</h3>
        </div>
        <div class="card-body">
          <canvas id="transactionStatusChart" width="300" height="300"></canvas>
        </div>
      </div>
    </div>
    
    <div class="medium-6 columns">
      <div class="card">
        <div class="card-header">
          <h3>Payment Gateway Performance</h3>
        </div>
        <div class="card-body">
          <% if @report_data[:gateway_performance]&.any? %>
            <div class="gateway-list">
              <% @report_data[:gateway_performance].each do |gateway| %>
                <div class="gateway-item">
                  <div class="gateway-info">
                    <strong><%= gateway[:name] %></strong>
                    <span class="gateway-transactions"><%= gateway[:transactions] %> transactions</span>
                  </div>
                  <div class="gateway-stats">
                    <div class="success-rate <%= gateway[:success_rate] > 95 ? 'excellent' : gateway[:success_rate] > 85 ? 'good' : 'poor' %>">
                      <%= gateway[:success_rate].round(1) %>% success
                    </div>
                    <div class="gateway-revenue">$<%= number_with_delimiter(gateway[:revenue]) %></div>
                  </div>
                </div>
              <% end %>
            </div>
          <% else %>
            <p class="no-data">No gateway performance data available.</p>
          <% end %>
        </div>
      </div>
    </div>
  </div>
<% end %>

<!-- Plan Comparison Report -->
<% if params[:report_type] == 'plans' %>
  <div class="row">
    <div class="medium-12 columns">
      <div class="card">
        <div class="card-header">
          <h3>Billing Plans Comparison</h3>
        </div>
        <div class="card-body">
          <% if @report_data[:plan_comparison]&.any? %>
            <div class="plans-comparison-table">
              <table class="comparison-table">
                <thead>
                  <tr>
                    <th>Plan</th>
                    <th>Price</th>
                    <th>Message Limit</th>
                    <th>Active Accounts</th>
                    <th>Total Revenue</th>
                    <th>Avg. Usage</th>
                    <th>Conversion Rate</th>
                    <th>Performance</th>
                  </tr>
                </thead>
                <tbody>
                  <% @report_data[:plan_comparison].each do |plan| %>
                    <tr>
                      <td>
                        <div class="plan-info">
                          <strong><%= plan[:name] %></strong>
                          <small><%= plan[:description] if plan[:description].present? %></small>
                        </div>
                      </td>
                      <td>$<%= plan[:price] %></td>
                      <td><%= number_with_delimiter(plan[:message_limit]) %></td>
                      <td><%= plan[:active_accounts] %></td>
                      <td>$<%= number_with_delimiter(plan[:total_revenue]) %></td>
                      <td><%= plan[:avg_usage].round(1) %>%</td>
                      <td><%= plan[:conversion_rate].round(1) %>%</td>
                      <td>
                        <div class="plan-performance">
                          <div class="performance-bar">
                            <div class="performance-fill" style="width: <%= plan[:performance_score] %>%"></div>
                          </div>
                          <span><%= plan[:performance_score].round(1) %>%</span>
                        </div>
                      </td>
                    </tr>
                  <% end %>
                </tbody>
              </table>
            </div>
          <% else %>
            <p class="no-data">No plan comparison data available.</p>
          <% end %>
        </div>
      </div>
    </div>
  </div>
<% end %>

<!-- Export Options -->
<div class="row">
  <div class="medium-12 columns">
    <div class="card">
      <div class="card-header">
        <h3>Export Options</h3>
      </div>
      <div class="card-body">
        <div class="export-options-grid">
          <div class="export-option">
            <h4>ðŸ“Š Detailed Report</h4>
            <p>Complete billing report with all metrics and charts</p>
            <%= link_to "Export PDF", super_admin_billing_reports_path(format: :pdf, **params.permit(:date_range, :start_date, :end_date, :plan_id, :report_type)), 
                        class: "button primary", target: "_blank" %>
          </div>
          
          <div class="export-option">
            <h4>ðŸ“ˆ Data Export</h4>
            <p>Raw data in CSV format for further analysis</p>
            <%= link_to "Export CSV", super_admin_billing_reports_path(format: :csv, **params.permit(:date_range, :start_date, :end_date, :plan_id, :report_type)), 
                        class: "button secondary" %>
          </div>
          
          <div class="export-option">
            <h4>ðŸ“§ Email Report</h4>
            <p>Send report to administrators via email</p>
            <%= link_to "Send Email", super_admin_billing_email_report_path(**params.permit(:date_range, :start_date, :end_date, :plan_id, :report_type)), 
                        method: :post, 
                        class: "button success",
                        confirm: "Send billing report to all administrators?" %>
          </div>
          
          <div class="export-option">
            <h4>ðŸ”„ Schedule Report</h4>
            <p>Set up automated recurring reports</p>
            <%= link_to "Schedule", super_admin_billing_schedule_report_path, class: "button warning" %>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>
// Date range selector
document.getElementById('date_range_select').addEventListener('change', function() {
  const customInputs = document.querySelectorAll('.custom-date-inputs');
  if (this.value === 'custom') {
    customInputs.forEach(input => input.style.display = 'block');
  } else {
    customInputs.forEach(input => input.style.display = 'none');
  }
});

// Chart toggle buttons
document.querySelectorAll('.chart-toggle').forEach(button => {
  button.addEventListener('click', function() {
    document.querySelectorAll('.chart-toggle').forEach(btn => btn.classList.remove('active'));
    this.classList.add('active');
    // Update chart based on selection
    updateRevenueChart(this.dataset.chart);
  });
});

// Revenue Chart
const revenueCtx = document.getElementById('revenueChart');
if (revenueCtx) {
  const revenueChart = new Chart(revenueCtx, {
    type: 'line',
    data: {
      labels: <%= raw (@report_data[:revenue_chart]&.dig(:labels) || []).to_json %>,
      datasets: [{
        label: 'Revenue',
        data: <%= raw (@report_data[:revenue_chart]&.dig(:data) || []).to_json %>,
        borderColor: '#007cba',
        backgroundColor: 'rgba(0, 124, 186, 0.1)',
        tension: 0.4,
        fill: true
      }]
    },
    options: {
      responsive: true,
      plugins: {
        legend: {
          display: false
        }
      },
      scales: {
        y: {
          beginAtZero: true,
          ticks: {
            callback: function(value) {
              return '$' + value.toLocaleString();
            }
          }
        }
      }
    }
  });
}

// Usage Chart
const usageCtx = document.getElementById('usageChart');
if (usageCtx) {
  new Chart(usageCtx, {
    type: 'bar',
    data: {
      labels: <%= raw (@report_data[:usage_chart]&.dig(:labels) || []).to_json %>,
      datasets: [{
        label: 'Messages',
        data: <%= raw (@report_data[:usage_chart]&.dig(:data) || []).to_json %>,
        backgroundColor: '#4CAF50',
        borderColor: '#45a049',
        borderWidth: 1
      }]
    },
    options: {
      responsive: true,
      plugins: {
        legend: {
          display: false
        }
      },
      scales: {
        y: {
          beginAtZero: true
        }
      }
    }
  });
}

// Transaction Status Chart
const transactionCtx = document.getElementById('transactionStatusChart');
if (transactionCtx) {
  new Chart(transactionCtx, {
    type: 'doughnut',
    data: {
      labels: <%= raw (@report_data[:transaction_status]&.keys || []).to_json %>,
      datasets: [{
        data: <%= raw (@report_data[:transaction_status]&.values || []).to_json %>,
        backgroundColor: ['#4CAF50', '#f44336', '#ff9800', '#2196F3']
      }]
    },
    options: {
      responsive: true,
      plugins: {
        legend: {
          position: 'bottom'
        }
      }
    }
  });
}

function updateRevenueChart(period) {
  // This would typically make an AJAX request to get new data
  console.log('Updating chart for period:', period);
}
</script>

<style>
.report-filters-form {
  background-color: #f8f9fa;
  padding: 20px;
  border-radius: 8px;
}

.filter-row {
  display: flex;
  gap: 20px;
  align-items: end;
  flex-wrap: wrap;
}

.filter-group {
  display: flex;
  flex-direction: column;
  min-width: 150px;
}

.filter-label {
  font-weight: bold;
  margin-bottom: 5px;
  color: #333;
}

.filter-select,
.filter-input {
  padding: 8px 12px;
  border: 1px solid #ddd;
  border-radius: 4px;
  font-size: 14px;
}

.filter-actions {
  display: flex;
  gap: 10px;
  align-items: end;
}

.summary-card {
  background: white;
  border-radius: 8px;
  padding: 20px;
  text-align: center;
  box-shadow: 0 2px 4px rgba(0,0,0,0.1);
  margin-bottom: 20px;
  border-left: 4px solid;
}

.summary-card.revenue {
  border-left-color: #4CAF50;
}

.summary-card.transactions {
  border-left-color: #2196F3;
}

.summary-card.messages {
  border-left-color: #ff9800;
}

.summary-card.accounts {
  border-left-color: #9C27B0;
}

.summary-icon {
  font-size: 2em;
  margin-bottom: 10px;
}

.summary-value {
  font-size: 2.5em;
  font-weight: bold;
  margin-bottom: 5px;
  color: #333;
}

.summary-label {
  font-weight: bold;
  color: #666;
  margin-bottom: 10px;
}

.summary-change {
  font-size: 0.9em;
  font-weight: bold;
}

.summary-change.positive {
  color: #4CAF50;
}

.summary-change.negative {
  color: #f44336;
}

.chart-controls {
  display: flex;
  gap: 5px;
}

.chart-toggle {
  padding: 5px 15px;
  border: 1px solid #ddd;
  background: white;
  border-radius: 4px;
  cursor: pointer;
  font-size: 12px;
}

.chart-toggle.active {
  background: #007cba;
  color: white;
  border-color: #007cba;
}

.plan-revenue-list {
  space-y: 15px;
}

.plan-revenue-item {
  margin-bottom: 15px;
}

.plan-info {
  display: flex;
  justify-content: space-between;
  margin-bottom: 5px;
}

.plan-accounts {
  color: #666;
  font-size: 0.9em;
}

.plan-revenue {
  text-align: right;
}

.revenue-bar {
  height: 6px;
  background-color: #e0e0e0;
  border-radius: 3px;
  overflow: hidden;
  margin-top: 5px;
}

.revenue-fill {
  height: 100%;
  background-color: #4CAF50;
  transition: width 0.3s ease;
}

.usage-metrics-grid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
  gap: 20px;
  margin-bottom: 30px;
}

.usage-metric {
  text-align: center;
  padding: 20px;
  background-color: #f8f9fa;
  border-radius: 8px;
}

.usage-metric h4 {
  margin: 0 0 10px 0;
  color: #333;
  font-size: 1em;
}

.metric-value {
  font-size: 2em;
  font-weight: bold;
  color: #007cba;
  margin-bottom: 5px;
}

.metric-unit {
  color: #666;
  font-size: 0.9em;
}

.usage-chart-container {
  margin-top: 30px;
}

.accounts-table-container {
  overflow-x: auto;
}

.accounts-performance-table {
  width: 100%;
  border-collapse: collapse;
}

.accounts-performance-table th,
.accounts-performance-table td {
  padding: 12px;
  text-align: left;
  border-bottom: 1px solid #eee;
}

.accounts-performance-table th {
  background-color: #f8f9fa;
  font-weight: bold;
  color: #333;
}

.account-info strong {
  display: block;
}

.account-info small {
  color: #666;
}

.usage-progress {
  display: flex;
  align-items: center;
  gap: 10px;
}

.usage-bar {
  flex: 1;
  height: 8px;
  background-color: #e0e0e0;
  border-radius: 4px;
  overflow: hidden;
}

.usage-fill {
  height: 100%;
  transition: width 0.3s ease;
}

.usage-fill.normal {
  background-color: #4CAF50;
}

.usage-fill.near-limit {
  background-color: #ff9800;
}

.usage-fill.over-limit {
  background-color: #f44336;
}

.usage-text {
  font-size: 0.9em;
  font-weight: bold;
  min-width: 45px;
}

.status-badge {
  padding: 4px 8px;
  border-radius: 12px;
  font-size: 0.8em;
  font-weight: bold;
}

.status-badge.active {
  background-color: #4CAF50;
  color: white;
}

.status-badge.suspended {
  background-color: #f44336;
  color: white;
}

.status-badge.expired {
  background-color: #ff9800;
  color: white;
}

.performance-score {
  padding: 4px 8px;
  border-radius: 4px;
  font-weight: bold;
  text-align: center;
}

.performance-score.excellent {
  background-color: #4CAF50;
  color: white;
}

.performance-score.good {
  background-color: #8BC34A;
  color: white;
}

.performance-score.average {
  background-color: #ff9800;
  color: white;
}

.performance-score.poor {
  background-color: #f44336;
  color: white;
}

.gateway-list {
  space-y: 15px;
}

.gateway-item {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 15px;
  background-color: #f8f9fa;
  border-radius: 8px;
  margin-bottom: 15px;
}

.gateway-info strong {
  display: block;
}

.gateway-transactions {
  color: #666;
  font-size: 0.9em;
}

.gateway-stats {
  text-align: right;
}

.success-rate {
  font-weight: bold;
  margin-bottom: 5px;
}

.success-rate.excellent {
  color: #4CAF50;
}

.success-rate.good {
  color: #8BC34A;
}

.success-rate.poor {
  color: #f44336;
}

.gateway-revenue {
  color: #333;
  font-size: 1.1em;
  font-weight: bold;
}

.plans-comparison-table {
  overflow-x: auto;
}

.comparison-table {
  width: 100%;
  border-collapse: collapse;
}

.comparison-table th,
.comparison-table td {
  padding: 12px;
  text-align: left;
  border-bottom: 1px solid #eee;
}

.comparison-table th {
  background-color: #f8f9fa;
  font-weight: bold;
  color: #333;
}

.plan-info strong {
  display: block;
}

.plan-info small {
  color: #666;
}

.plan-performance {
  display: flex;
  align-items: center;
  gap: 10px;
}

.performance-bar {
  flex: 1;
  height: 8px;
  background-color: #e0e0e0;
  border-radius: 4px;
  overflow: hidden;
}

.performance-fill {
  height: 100%;
  background-color: #007cba;
  transition: width 0.3s ease;
}

.export-options-grid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
  gap: 20px;
}

.export-option {
  padding: 20px;
  background-color: #f8f9fa;
  border-radius: 8px;
  text-align: center;
}

.export-option h4 {
  margin: 0 0 10px 0;
  color: #333;
}

.export-option p {
  margin: 0 0 20px 0;
  color: #666;
  font-size: 0.9em;
}

.no-data {
  text-align: center;
  color: #666;
  padding: 40px 20px;
  font-style: italic;
}

.card {
  background: white;
  border-radius: 8px;
  box-shadow: 0 2px 4px rgba(0,0,0,0.1);
  margin-bottom: 20px;
}

.card-header {
  padding: 15px 20px;
  border-bottom: 1px solid #eee;
  background-color: #f8f9fa;
  display: flex;
  justify-content: space-between;
  align-items: center;
}

.card-header h3 {
  margin: 0;
  font-size: 1.2em;
}

.card-body {
  padding: 20px;
}

.export-actions {
  display: flex;
  gap: 10px;
}
</style>